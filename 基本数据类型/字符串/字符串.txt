1.创建
字符串使用单引号或者双引号来进行创建
三引号允许一个字符串跨多行，字符串中可以包含换行符、制表符以及其他特殊符号
python不支持单字符类型,单字符也是作为一个字符串在使用
2.访问
索引、切片
字符串是不可修改的
3，转义字符
\:续行符
eg:
b='''
python
java
'''
与
b='python' \
  'java' \
  ''
效果一致
\n:换行
\':单引号
\"：双引号
\t:横向制表符
\v:纵向制表符
\r:回车
\b:退格
\f:换页
4.字符串格式化
eg:print("今天购物：%s,花费:%.2f"%("皮鞋",356.7))
结果为:今天购物：皮鞋,花费:356.70
注：%运算符用于格式化字符串，%s、%.2f为占位符，%后面括号里面的变量个数要与前面
占位符个数一致。若只有一个占位符，括号可以省略
在字符串格式化时，用'%%'来表示一个%
eg:'growth rate: %d %%' % 7
结果为:growth rate:%7
格式化整数和浮点数还可以指定是否补0和整数与小数的位数
'%2d-%02d' % (3, 1) 结果为' 3-01‘
'%.2f' % 3.1415926 结果为'3.14'
无论何时，%s永远有效
格式化占位符:
%s:格式化字符串
%d:格式化十进制整数
%f:格式化浮点数，可指定小数点后的精度
%e:用科学计数法格式化浮点数
占位修饰符:
*:定义宽度或者小数点精度
-:用作左对齐
+：在正数面前显示(+)加号
<sp>:在正数面前显示空格
m.n.:m是显示的最小总宽度,n是小数位后的总宽度
5.内建方法
大小写转换：
capitalize():将字符串的第一个字符大写
lower():将字符串中所有字符小写
upper():将字符串中所有字符大写
swapcase():将字符串中大写转小写,小写转大写
title():返回标题化的字符串(所有单词首字母大写，其余字母小写)

对齐
center(width,fillchar):返回一个width居中的字符串,fillchar为填充的字符，默认为空
格
ljust(width[,fillchar]):返回一个原字符串左对齐，并使用fillchar填充至长度为width
的新字符串,fillchar默认为空格
rjust(width[,fillchar]):返回一个原字符串右对齐，并使用fillchar填充至长度为width
的新字符串,fillchar默认为空格
zfill(width):返回长度为width的字符串，原字符串右对齐，前面填充0

去除空格
lstrip():截掉字符串左边的空格
rstrip():截掉字符串右边的空格
strip():截掉字符串两端的空格
strip()若有参数，则去除首尾两端包含参数的部分
eg：
a='s3ch9gh0d3g3Ddg132a1.2d65Zf5gg-2r'
print(a.strip("rs"))
结果为3ch9gh0d3g3Ddg132a1.2d65Zf5gg-2

count(str,beg=0,end=len(string)):返回str在string里面出现的次数,如果beg或end指定
则返回指定范围内str出现的次数
encode(encoding='UTF-8',errors='strict'):以encoding指定的编码格式编码字符串，如
果出错默认报一个VauleError的异常,除非errors指定的是'ignore'或者'replace'
endwith(obj,beg=0,end=len(string)):检查字符串是否以Obj结束，如果beg或end指定则
检查指定范围内是否以Obj结束。如果是则返回True,否则返回False
startwith(obj,beg=0,end=len(string)):检查字符串是否以Obj开始，如果beg或end指定则
检查指定范围内是否以Obj结束。如果是则返回True,否则返回False
expandtabs(tabsize=8):把字符串string中的tab符号转为空格，tab符号默认的空格数是8
find(str,beg=0,end=len(string)):检查str是否包含在字符串中，如果beg或end指定则检
查str是否包含在指定范围内，如果是则返回开始的索引值，否则返回-1
rfind():类似于find()函数，不过是从右边查找
index(str,beg=0,end=len(string)):跟find()方法一样，只不过如果str不在字符串中会
报一个异常
rindex():类似于index()函数，不过是从右边查找
isalnum():如果字符串仅由数字或字母组成，返回True，否则返回False
isalpha():如果字符串仅由字母组成，返回True，否则返回False
isdigit():如果字符串仅由数字组成，返回True，否则返回False
islower():所有字符都是小写,返回True，否则返回False
isupper():所有字符都是大写,返回True，否则返回False
isspace():所有字符都是空格,返回True，否则返回False
isnumeric():如果字符串只包含数字字符,返回True，否则返回False
isdecimal():检查字符串是否只包含十进制字符，如果是则返回True,否则返回False
istitle():如果字符串是标题化的，返回True，否则返回False
join(seq):以指定字符串作为分隔符，将seq中的所有元素合并为一个新的字符串。要求
seq中所有元素均为字符串
eg:a=['1','2','3']
b=''.join(a) 结果为b='123'
len():返回字符串长度



maketrans():创建字符串映射的转换表,对于接受两个参数的最简单的调用方式,两个参
数都是字符串，第一个表示需要转换的字符,第一个表示需要转换的目标
translate(table,deletechars=''):根据str给出的表table转换string的字符，要过滤掉
的字符放到参数deletechars中
translate与replace的区别:
translate只能替换单个字符，可以进行多个不同字符的替换,多字符替换时效率比replace高。
而replace却可以替换多字符，但是只能多处替换同一字符
用法示例:
table=maketrans('cs','kz') #把c替换为k，s替换为z
'this is cmath'.translate(table,'') 结果为thizizkmath

max(str):返回字符串str中最大的字符
min(str):返回字符串str中最大的字符
replace(old,new[,max]):把字符串中的old换成new,默认将全部的old替换，如果max指定
，则替换不超过max次
split(str='',num=string.count(str)):以str为分隔符截取字符串,如果num有指定值,则
仅截取num个子字符串，以列表的形式返回
splitlines(keepends):按照行('\r'、'\r\n'、'\n')分隔，返回一个包含各行作为元素的
列表，如果参数keepends为False，不包含换行符，为True,则包含换行符

字符串排序
a1='dA汗13DREaASaSAasS'
a1=list(a1)
a1.sort()
print(''.join(a1))
sorter1 = sorted([1,3,6,-20,34])
print("升序排列:",sorter1)
#  sorted()函数也是一个高阶函数，它还可以接收一个key函数来实现自定义的排序
sorter2 = sorted([1,3,6,-20,-70],key=abs)
print("自定义排序:",sorter2)
sorter2 = sorted([1,3,6,-20,-70],key=abs,reverse=True)
print("自定义反向排序:",sorter2)
#  字符串排序依照ASCII
sorter3 = sorted(["ABC","abc","D","d"])
print("字符串排序:",sorter3)
# 忽略大小写排序
sorter4 = sorted(["ABC","abc","D","d"],key=str.lower)
print("忽略字符串大小写排序:",sorter4)
# 4.4 要进行反向排序，不必改动key函数，可以传入第三个参数reverse=True：
sorter5 = sorted(["ABC","abc","D","d"],key=str.lower,reverse=True)
print("忽略字符串大小写反向排序:",sorter5)
