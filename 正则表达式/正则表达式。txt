一、正则表达式
*:匹配于前面一个普通字符0次或多次
+:匹配于前面一个普通字符1次或多次
?:匹配于前面一个普通字符0次或1次
.:匹配于任意一个字符
^:匹配行首
$:匹配行尾
\:转义符,如\.不在表示匹配于任意一个字符,而是普通的字符句号
匹配'\':'\\\'或r'\\'
\<\>:精确匹配符号
eg:\<the\>:精确匹配the这个单词,不匹配them、there、other等包含the字符的单词
match对象的属性:
string:匹配时使用的文本
re:匹配时使用的pattern对象
pos:文本中正则表达式开始搜索的索引
endpos:文本中正则表达式结束搜索的索引
lastindex:最后一个被捕获的分组在文本中的索引,若没有则为None
lastgroup:最后一个被捕获的分组的别名,若没有则为None
match对象的方法:
group([group1,,,,]):获得一个或多个分组截获的字符串；指定多个参数时以元组的形式返回。group1可以使用编号也可以使用别名；编号0代表整个匹配的子串；不指定参数时,返回group(0),即整个匹配的字符串；没有截获字符串的组返回None;截获了多次的组返回最后一次截获的子串。
groups([default]):以元组形式返回全部分组截获的字符串,相当于调用group(1,2,,,,,last),default表示没有截获字符串的组以这个值代替,默认值为None
groupdict(default):返回以有别名的组的别名为键,以该组截获的子串为值的字典,没有别名的组不包含在内
start([group]):返回指定的组截获的子串在string中的起始索引(子串第一个字符的索引),group默认值为0
end([group]):返回指定的组截获的子串在string中的结束索引(子串最后一个字符的索引+1),group默认值为0
span([group]):返回(start(group),end(group))
extend(tempalte):将匹配到的分组代入template中然后返回,template中可以用\id或\g<id>、\g<name>引用分组,但不能使用编号0。\id与\g<id>是等价的,但是\10将被认为是第10个分组,如果你想表达\1之后是字符0,只能使用\g<1>0
re模块的方法
split(pattern,string,maxsplit):按照能够匹配的子串将string分割后返回列表,maxsplit用于指定最大分割次数,不指定将全部分割
findall(pattern,string[,flags]):搜索string,以列表形式返回全部能匹配的子串
flags匹配模式:
re.I:忽略大小写
re.M:多行模式,改变'^'和'$'的行为
re.S:点任意匹配模式,改变'.'的行为
re.X:详细模式,这个模式下正则表达式可以使多行,忽略空白字符,并可以加入注释
finditer(pattern,string[,flags]):搜索string,返回一个顺序访问每一个匹配结果的迭代器
sub(pattern,repl,string[,count]):使用repl替换string中每一个匹配的子串后返回替换后的字符串
注:1.使用repl替换string中每一个匹配的子串后返回替换后的字符串
1.1当repl是一个字符串时,可以使用\id或\g引用分组,但不能使用编号0
1.2当repl是一个方法时,这个方法应当只接受一个参数(Match对象),并返回一个字符串用于替换(返回的字符串不能再引用分组)
2.count用于指定最多替换次数,不指定全部替换
subn(pattern,repl,string[,count]):返回sub(pattern,repl,string[,count],替换次数)
二、通配符
*:任意位的任意字符
？:任意一个字符
^:取反
{}:
eg:ls -l {[a-h]*.awk,0?.pem}:列出匹配以a-h范围内字母开头且以.awk结尾或以0开头后面跟1个字符且以.pem为后缀的文件
